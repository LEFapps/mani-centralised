service: ${env:CLIENT}-mani
useDotenv: true
variablesResolutionMode: 20210326

provider:
  name: aws
  runtime: nodejs12.x
  region: ${env:REGION, 'eu-west-1'}
  stage: ${opt:stage, 'dev'}
  tracing: # this tracks a request through the AWS infrastructure, to figure out bottle-necks, etc. Could reasonably be turned off.
    apiGateway: ${env:XRAY, self:custom.debug}
  logs:
    restApi: ${env:LOG_REST_API, self:custom.debug} # Adds a log stream (we could turn this off).
  httpApi:
    cors: false
    authorizers:
      cognitoAuthorizer:
        type: jwt
        identitySource: $request.header.Authorization
        audience:
          - Ref: CognitoUserPoolClient
        issuerUrl:
          Fn::Sub: https://cognito-idp.${AWS::Region}.amazonaws.com/${CognitoUserPool}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - lambda:InvokeAsync
        - lambda:InvokeFunction
      Resource: '*'
    - Effect: Allow
      Action:
        - cognito-idp:*
      Resource: '*'
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: '*'

# Warning: the dynamodb shell does NOT work in Firefox, only in Chrome
custom:
  debug: ${env:DEBUG, true} # debug mode (string values or 0|1 are converted)
  output:
    file: client/sls-output.${self:provider.stage}.json
  dynamodb:
    stages:
      - test
      - dev
      - offline
    start:
      inMemory: true
      migrate: true
  prefix: ${self:service}-${self:provider.stage}
  tableName: ${self:service}-${self:provider.stage}-ledgers
  serverless-offline:
    allowCache: true

package:
  # individually: true
  patterns:
    - '!node_modules/aws-sdk'
    - '!client'
    - '!tests'
    - '!src'
    - '!.dynamodb'

plugins:
  # WARNING! This is serverless-dynamodb-local from https://github.com/99x/serverless-dynamodb-local
  # it is different from the official serverless docs!
  - serverless-dynamodb-local
  - serverless-offline
  - serverless-stack-output

functions:
  stripe:
    handler: dist/server.stripeHandler
    events:
      - httpApi:
          path: /${self:provider.stage}/stripe
          method: 'OPTIONS'
      - httpApi:
          path: /${self:provider.stage}/stripe
          method: 'GET'
      - httpApi:
          path: /${self:provider.stage}/stripe
          method: 'POST'
    environment:
      DYN_TABLE: ${self:custom.tableName}
      DEBUG: ${self:custom.debug}
      NODE_DEBUG: ${env:NODE_DEBUG, 'sumsy*'}
      LOG_LEVEL: ${env:LOG_LEVEL, 'debug'}
      LOG_PREFIX: sumsy
      USER_POOL:
        Ref: CognitoUserPool
      ACCOUNT_TYPES: ${env:ACCOUNT_TYPES, '[{"type":"default","income":0,"buffer":0,"demurrage":2.5},{"type":"prepaid","income":0,"buffer":0,"demurrage":0.0},{"type":"verified","income":0,"buffer":5,"demurrage":2.5},{"type":"guaranteed_income","income":16,"buffer":5,"demurrage":2.5},{"type":"professional","income":0,"buffer":5,"demurrage":0.5},{"type":"demo","income":1000,"buffer":0,"demurrage":20}]'}
      STRIPE_PRIVATE_KEY: ${env:STRIPE_PRIVATE_KEY}
      STRIPE_WEBHOOK_SECRET: ${env:STRIPE_WEBHOOK_SECRET}
  graphql:
    handler: dist/server.graphqlHandler
    events:
      - httpApi:
          path: /${self:provider.stage}/graphql
          method: 'OPTIONS'
      - httpApi:
          path: /${self:provider.stage}/graphql
          method: 'GET'
          authorizer:
            name: cognitoAuthorizer
      - httpApi:
          path: /${self:provider.stage}/graphql
          method: 'POST'
          authorizer:
            name: cognitoAuthorizer
    environment:
      DYN_TABLE: ${self:custom.tableName}
      DEBUG: ${self:custom.debug}
      NODE_DEBUG: ${env:NODE_DEBUG, 'sumsy*'}
      LOG_LEVEL: ${env:LOG_LEVEL, 'error'}
      LOG_PREFIX: sumsy
      USER_POOL:
        Ref: CognitoUserPool
      ACCOUNT_TYPES: ${env:ACCOUNT_TYPES, '[{"type":"default","income":0,"buffer":0,"demurrage":2.5},{"type":"prepaid","income":0,"buffer":0,"demurrage":0.0},{"type":"verified","income":0,"buffer":5,"demurrage":2.5},{"type":"guaranteed_income","income":16,"buffer":5,"demurrage":2.5},{"type":"professional","income":0,"buffer":5,"demurrage":0.5},{"type":"demo","income":1000,"buffer":0,"demurrage":20}]'}
      STRIPE_PRIVATE_KEY: ${env:STRIPE_PRIVATE_KEY}
      STRIPE_PRICE_ID: ${env:STRIPE_PRICE_ID}

resources:
  - ${file(resources/dynamo.yml)}
  - ${file(resources/client.yml)}
  - ${file(resources/cognito.yml)}
  - ${file(resources/exports.yml)}
  - ${file(resources/cloudfront.yml)}
